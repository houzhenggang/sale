<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx">

	<!-- default-autowire="byName"，约定优于配置，约定优于配置 -->
	<description>Spring MVC Configuration</description>
    
	<context:property-placeholder location="classpath:application.properties" />

	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.hshc.sale.web.**.*,com.hshc.common.web.**.*" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" /> 
	</context:component-scan>

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->

	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="fastJsonHttpMessageConverter" />
			<ref bean="stringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 拦截器 -->
	<mvc:interceptors>
		 <!-- 国际化 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- 异常 -->
		<bean class="com.hshc.common.interceptor.ExceptionInterceptor" />
		<!-- 用户Session -->
		<bean class="com.hshc.sale.web.interceptor.UserLoginInterceptor"/>
	</mvc:interceptors>

	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${web.view.index}" />

	<!-- 上传限制 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000" />
		<property name="maxInMemorySize" value="5000000" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- 基于Cookie的国际化配置 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- 错误异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop
					key="org.springframework.web.bind.MissingServletRequestParameterException">
					/error/requiredParameter
				</prop>
				<prop key="org.springframework.beans.TypeMismatchException">
					/error/mismatchParameter
				</prop>
				<prop key="org.springframework.web.bind.ServletRequestBindingException">
					/error/bindException
				</prop>
				<prop key="org.springframework.dao.DataIntegrityViolationException">
					/error/integrityViolation
				</prop>
			</props>
		</property>
	</bean>


	<!-- fastjson转换 -->
	<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
			    <value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
        <property name="features">
            <list>
               <value>DisableCircularReferenceDetect</value>
           </list>
        </property>
	</bean>

	<!-- string编码格式与转换 -->
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" />
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="text" />
					<constructor-arg index="1" value="plain" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="*" />
					<constructor-arg index="1" value="*" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 内容协商管理器 -->
	<!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true" />
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="false" />

		<property name="mediaTypes"><!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property>
		<!-- 默认的content type -->
		<property name="defaultContentType" value="text/html" />
	</bean>

	<!-- freemark视图分析器 -->
	<bean id="freemarkerViewResolver" class="com.hshc.common.web.springmvc.RichFreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="${web.view.prefix}" />
		<property name="suffix" value="${web.view.suffix}" />
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="request" />
	</bean>
	<!-- freemark配置 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="${templateLoaderPath}" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="html_escape" value-ref="fmHtmlEscape" />
				<entry key="uuid" value-ref="uuid"/>
				<entry key="perms" value-ref="perms"/>
				<entry key="text_cut" value-ref="text_cut"/>
				<entry key="process_time" value-ref="process_time"/>
				<entry key="backlog" value-ref="backlog"/>
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="auto_import">
					/ftl/spring.ftl as s
				</prop>
			</props>
		</property>
	</bean>

	<!-- freemarker xml编码转换 -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- freemarker html编码转换 -->
	<bean id="fmHtmlEscape" class="freemarker.template.utility.HtmlEscape" />
	
</beans> 